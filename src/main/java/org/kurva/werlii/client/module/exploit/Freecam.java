package org.kurva.werlii.client.module.exploit;

import net.minecraft.client.network.ClientPlayerEntity;
import net.minecraft.entity.Entity;
import net.minecraft.util.math.Vec3d;
import org.kurva.werlii.client.module.Module;
import org.kurva.werlii.client.setting.BooleanSetting;
import org.kurva.werlii.client.setting.NumberSetting;
import org.lwjgl.glfw.GLFW;

public class Freecam extends Module {
    private final NumberSetting speedS;
    private final BooleanSetting collisionS;
    private final BooleanSetting autoThirdPersonS;
    private final BooleanSetting showPlayerS;
    
    private Vec3d startPos;
    private float startYaw;
    private float startPitch;
    private boolean isFlying;
    private boolean noClip;
    private int thirdPersonView;
    
    public Freecam() {
        super("Freecam", "Allows camera to move independently from player", Category.EXPLOIT);
        this.setKeyCode(GLFW.GLFW_KEY_UNKNOWN);
        this.registerKeybinding("Werlii Exploit");
        
        speedS = new NumberSetting("Speed", "Camera movement speed", this, 1.0, 0.1, 10.0, 0.1);
        collisionS = new BooleanSetting("Collision", "Enable camera collision", this, false);
        autoThirdPersonS = new BooleanSetting("Auto Third Person", "Automatically switch to third person", this, true);
        showPlayerS = new BooleanSetting("Show Player", "Show player model", this, true);
        
        addSetting(speedS);
        addSetting(collisionS);
        addSetting(autoThirdPersonS);
        addSetting(showPlayerS);
    }
    
    @Override
    public void onEnable() {
        super.onEnable();
        
        if (mc.player == null) return;
        
        startPos = mc.player.getPos();
        startYaw = mc.player.getYaw();
        startPitch = mc.player.getPitch();
        
        isFlying = mc.player.getAbilities().flying;
        noClip = mc.player.noClip;
        
        thirdPersonView = mc.options.getPerspective().ordinal();
        
        if (autoThirdPersonS.getValue()) {
            mc.options.setPerspective(net.minecraft.client.option.Perspective.THIRD_PERSON_BACK);
        }
    }
    
    @Override
    public void onDisable() {
        super.onDisable();
        
        if (mc.player == null) return;
        
        mc.player.setPosition(startPos.x, startPos.y, startPos.z);
        mc.player.setYaw(startYaw);
        mc.player.setPitch(startPitch);
        
        mc.player.getAbilities().flying = isFlying;
        mc.player.noClip = noClip;
        
        mc.options.setPerspective(net.minecraft.client.option.Perspective.values()[thirdPersonView]);
    }
    
    @Override
    public void onTick() {
        if (mc.player == null) return;
        
        mc.player.getAbilities().flying = true;
        mc.player.noClip = !collisionS.getValue();
        
        mc.player.getAbilities().setFlySpeed(speedS.getValue().floatValue() * 0.05f);
        
        handleMovement();
    }
    
    private void handleMovement() {
    }
    
    public boolean shouldCancelPackets() {
        return isEnabled();
    }
    
    public boolean shouldShowPlayer() {
        return isEnabled() && showPlayerS.getValue();
    }
    
    public boolean shouldPreventPlayerMovement() {
        return isEnabled();
    }
}

